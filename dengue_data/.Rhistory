path2009 <- "2009_dengue_extracted.xlsx"
path2010 <- "2010_dengue_extracted.xlsx"
path2011 <- "2011_dengue_extracted.xlsx"
path2012 <- "2012_dengue_extracted.xlsx"
path2013 <- "2013_dengue_extracted.xlsx"
path2014 <- "2014_dengue_extracted.xlsx"
path2015 <- "2015_dengue_extracted.xlsx"
path2016 <- "2016_dengue_extracted.xlsx"
path2017 <- "2017_dengue_extracted.xlsx"
path2018 <- "2018_dengue_extracted.xlsx"
path2019 <- "2019_dengue_extracted.xlsx"
path2020 <- "2010_dengue_extracted.xlsx"
# Pfad zum Arbeitsverzeichnis setzen (wo die Excel-Datei liegt)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Excel-Datei einlesen und als Dataframe speichern
dengue2006 <- read_excel(path2006)
dengue2007 <- read_excel(path2007)
dengue2008 <- read_excel(path2008)
dengue2009 <- read_excel(path2009)
dengue2010 <- read_excel(path2010)
dengue2011 <- read_excel(path2011)
dengue2012 <- read_excel(path2012)
dengue2013 <- read_excel(path2013)
dengue2014 <- read_excel(path2014)
dengue2015 <- read_excel(path2015)
dengue2016 <- read_excel(path2016)
dengue2017 <- read_excel(path2017)
dengue2018 <- read_excel(path2018)
dengue2019 <- read_excel(path2019)
dengue2020 <- read_excel(path2020)
# Den eingelesenen Dataframe anzeigen
print(dengue2006)
print(dengue2007)
#eine zeile fehlt bei 2020: lasst uns sie hinzufügen
Bungkan = c("Bungkan",873, 17, 31, 48, 21, 154, 453, 122, 21, 5, 1, 0, 0)
dengue2020 = rbind(dengue2020,Bungkan)
# Liste der Jahre
years <- c(2012:2016)
for (year in years) {
# Name des Dataframes
df_name <- paste0("dengue", year)
# Dataframe abrufen
df <- get(df_name)
total_col_name <- paste0("Total", year)  # Name der "Total"-Spalte
df[, total_col_name] <- rowSums(df[, 2:13])  # "Total"-Spalte hinzufügen
assign(df_name, df)  # Aktualisierten Dataframe speichern
}
rownames(dengue2006) = dengue2006$`Reporting areas`
#let`s remove the total Zone numbers and Regions
i.remove = which(rownames(dengue2006) %in% c("Zone:1","Zone:4","Zone:2","Zone:5","Zone:6", "Zone:3","Zone:7", "Zone:8", "Zone:9", "Zone:10", "Zone:11", "Zone:12", "Zone:13", "Zone:14", "Zone:15", "Zone:16", "Zone:17", "Zone:18", "Zone:20", "Northern Region", "Central Region", "Southern Region", "North-Eastern Region","Total"))
#let´s remove the lines
dengue2006 = dengue2006[- i.remove,]
print(dengue2006)
#alle spalten namen angleichen
colnames(dengue2008) = dengue2009[1,]
colnames(dengue2009) = dengue2009[1,]
colnames(dengue2010) = dengue2009[1,]
colnames(dengue2011) = dengue2009[1,]
colnames(dengue2012) = dengue2009[1,]
colnames(dengue2013) = dengue2009[1,]
colnames(dengue2014) = dengue2009[1,]
colnames(dengue2015) = dengue2009[1,]
colnames(dengue2016) = dengue2009[1,]
colnames(dengue2017) = dengue2009[1,]
colnames(dengue2018) = dengue2009[1,]
colnames(dengue2019) = dengue2009[1,]
colnames(dengue2020) = dengue2009[1,]
# Liste der Jahre
years <- c(2006:2020)
#Nummern von 1-19
years0 = paste0("0", 1:9)
years1 = c(10:19)
#liste der Zonen mit format: ZONE:01 - 19
ZONE0 = c(paste0("ZONE",":", years0), paste0("ZONE",":", years1))
#Liste der Zonen mit format Zone:1 - 19
Zone1 = c(paste0("Zone",":", 1:19))
# Schleife über die Jahre
for (year in years) {
# DataFrame-Namen generieren
df_name <- paste0("dengue", year)
# DataFrame laden
df <- get(df_name)
# Setze die Zeilennamen auf die Werte der Spalte "Reporting areas"
rownames(df) <- df$`Reporting areas`
# Zeilen entfernen
remove_rows <- c(ZONE0, Zone1, "Northern Region", "Central Region", "Southern Region", "North-Eastern Region","Total","Reportingareas", "Reporting areas", "North Region", "South Region", "Northeast Region")
df <- df[!rownames(df) %in% remove_rows, ]
# Speichere das modifizierte DataFrame unter dem gleichen Namen
assign(df_name, df)
# Gib das modifizierte DataFrame aus
print(df)
}
dataframes <- ls(pattern = "dengue\\d{4}")  # Liste der Dataframes, die dem Muster "dengueXXXX" entsprechen
for (df_name in dataframes) {
df <- get(df_name)  # Dataframe abrufen
df <- df[order(df$`Reporting areas`), ]  # Sortierung nach "Reporting areas"
assign(df_name, df)  # Aktualisierten Dataframe speichern
}
View(dengue2010)
View(dengue2012)
vergleich = which(dengue2010$'Reporting_Area' %in% dengue2011$Reporting_area)
zuviel = dengue2010[-vergleich,]
#zuviel
#vv = which(dengue_data_com_2$Reporting_area %in% T.huss_reshaped$'Reporting_Area')
#zz = dengue_data_com_2[-vv,]
#zz
vergleich = which(dengue2010$'Reporting area' %in% dengue2011$'Reporting area')
zuviel = dengue2010[-vergleich,]
#zuviel
#vv = which(dengue_data_com_2$Reporting_area %in% T.huss_reshaped$'Reporting_Area')
#zz = dengue_data_com_2[-vv,]
#zz
vergleich = which(dengue2010$Reporting area %in% dengue2011$Reporting area)
vergleich = which(dengue2010$`Reporting areas` %in% dengue2011$`Reporting areas`)
zuviel = dengue2010[-vergleich,]
#zuviel
#vv = which(dengue_data_com_2$Reporting_area %in% T.huss_reshaped$'Reporting_Area')
#zz = dengue_data_com_2[-vv,]
#zz
vergleich = which(dengue2010$`Reporting areas` %in% dengue2011$`Reporting areas`)
zuviel = dengue2010[-vergleich,]
zuviel
#vv = which(dengue_data_com_2$Reporting_area %in% T.huss_reshaped$'Reporting_Area')
#zz = dengue_data_com_2[-vv,]
#zz
vergleich = which(dengue2010$`Reporting areas` %in% dengue2011$`Reporting areas`)
zuviel = dengue2011[-vergleich,]
zuviel
#vv = which(dengue_data_com_2$Reporting_area %in% T.huss_reshaped$'Reporting_Area')
#zz = dengue_data_com_2[-vv,]
#zz
vergleich = which(dengue2011$`Reporting areas` %in% dengue2010$`Reporting areas`)
zuviel = dengue2011[-vergleich,]
zuviel
#vv = which(dengue_data_com_2$Reporting_area %in% T.huss_reshaped$'Reporting_Area')
#zz = dengue_data_com_2[-vv,]
#zz
vergleich = which(dengue2011$`Reporting areas` %in% dengue2010$`Reporting areas`)
zuviel = dengue2010[-vergleich,]
zuviel
#vv = which(dengue_data_com_2$Reporting_area %in% T.huss_reshaped$'Reporting_Area')
#zz = dengue_data_com_2[-vv,]
#zz
library(dplyr)
geo_data <- left_join(x = dengue2006, y = dengue2007, by = c("Reporting areas"))
library(dplyr)
merged_df <- left_join(x = dengue2006, y = dengue2007, by = c("Reporting areas"))
merged_df
# Benötigte Bibliothek laden
library(readxl)
# Relativer Pfad zur Excel-Datei
path2006 <- "2006_dengue_extracted.xlsx"
path2007 <- "2007_dengue_extracted.xlsx"
path2008 <- "2008_dengue_extracted.xlsx"
path2009 <- "2009_dengue_extracted.xlsx"
path2010 <- "2010_dengue_extracted.xlsx"
path2011 <- "2011_dengue_extracted.xlsx"
path2012 <- "2012_dengue_extracted.xlsx"
path2013 <- "2013_dengue_extracted.xlsx"
path2014 <- "2014_dengue_extracted.xlsx"
path2015 <- "2015_dengue_extracted.xlsx"
path2016 <- "2016_dengue_extracted.xlsx"
path2017 <- "2017_dengue_extracted.xlsx"
path2018 <- "2018_dengue_extracted.xlsx"
path2019 <- "2019_dengue_extracted.xlsx"
path2020 <- "2010_dengue_extracted.xlsx"
# Pfad zum Arbeitsverzeichnis setzen (wo die Excel-Datei liegt)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Excel-Datei einlesen und als Dataframe speichern
dengue2006 <- read_excel(path2006)
dengue2007 <- read_excel(path2007)
dengue2008 <- read_excel(path2008)
dengue2009 <- read_excel(path2009)
dengue2010 <- read_excel(path2010)
dengue2011 <- read_excel(path2011)
dengue2012 <- read_excel(path2012)
dengue2013 <- read_excel(path2013)
dengue2014 <- read_excel(path2014)
dengue2015 <- read_excel(path2015)
dengue2016 <- read_excel(path2016)
dengue2017 <- read_excel(path2017)
dengue2018 <- read_excel(path2018)
dengue2019 <- read_excel(path2019)
dengue2020 <- read_excel(path2020)
# Den eingelesenen Dataframe anzeigen
print(dengue2006)
print(dengue2007)
#eine zeile fehlt bei 2020: lasst uns sie hinzufügen
Bungkan = c("Bungkan",873, 17, 31, 48, 21, 154, 453, 122, 21, 5, 1, 0, 0)
dengue2020 = rbind(dengue2020,Bungkan)
# Liste der Jahre
years <- c(2012:2016)
for (year in years) {
# Name des Dataframes
df_name <- paste0("dengue", year)
# Dataframe abrufen
df <- get(df_name)
total_col_name <- paste0("Total", year)  # Name der "Total"-Spalte
df[, total_col_name] <- rowSums(df[, 2:13])  # "Total"-Spalte hinzufügen
assign(df_name, df)  # Aktualisierten Dataframe speichern
}
rownames(dengue2006) = dengue2006$`Reporting areas`
#let`s remove the total Zone numbers and Regions
i.remove = which(rownames(dengue2006) %in% c("Zone:1","Zone:4","Zone:2","Zone:5","Zone:6", "Zone:3","Zone:7", "Zone:8", "Zone:9", "Zone:10", "Zone:11", "Zone:12", "Zone:13", "Zone:14", "Zone:15", "Zone:16", "Zone:17", "Zone:18", "Zone:20", "Northern Region", "Central Region", "Southern Region", "North-Eastern Region","Total"))
#let´s remove the lines
dengue2006 = dengue2006[- i.remove,]
print(dengue2006)
#alle spalten namen angleichen
colnames(dengue2008) = dengue2009[1,]
colnames(dengue2009) = dengue2009[1,]
colnames(dengue2010) = dengue2009[1,]
colnames(dengue2011) = dengue2009[1,]
colnames(dengue2012) = dengue2009[1,]
colnames(dengue2013) = dengue2009[1,]
colnames(dengue2014) = dengue2009[1,]
colnames(dengue2015) = dengue2009[1,]
colnames(dengue2016) = dengue2009[1,]
colnames(dengue2017) = dengue2009[1,]
colnames(dengue2018) = dengue2009[1,]
colnames(dengue2019) = dengue2009[1,]
colnames(dengue2020) = dengue2009[1,]
# Liste der Jahre
years <- c(2006:2020)
#Nummern von 1-19
years0 = paste0("0", 1:9)
years1 = c(10:19)
#liste der Zonen mit format: ZONE:01 - 19
ZONE0 = c(paste0("ZONE",":", years0), paste0("ZONE",":", years1))
#Liste der Zonen mit format Zone:1 - 19
Zone1 = c(paste0("Zone",":", 1:19))
# Schleife über die Jahre
for (year in years) {
# DataFrame-Namen generieren
df_name <- paste0("dengue", year)
# DataFrame laden
df <- get(df_name)
# Setze die Zeilennamen auf die Werte der Spalte "Reporting areas"
rownames(df) <- df$`Reporting areas`
# Zeilen entfernen
remove_rows <- c(ZONE0, Zone1, "Northern Region", "Central Region", "Southern Region", "North-Eastern Region","Total","Reportingareas", "Reporting areas", "North Region", "South Region", "Northeast Region")
df <- df[!rownames(df) %in% remove_rows, ]
# Speichere das modifizierte DataFrame unter dem gleichen Namen
assign(df_name, df)
# Gib das modifizierte DataFrame aus
print(df)
}
#ausgangsdataframe sind die einzelmnen von 2006 - 2020
#zuerst müssen wir alle Spalten umbennen
#neue dataframecopy
dengue2020_2 = dengue2020
# Jahr für die Umbenennung festlegen
jahr <- 2020
# Spaltennamen umformatieren
colnames(dengue2020_2)[2:14] <- c(paste(jahr, "total", sep = "."), paste(jahr, sprintf('%02d', 1:12), sep = "."))
# Überprüfung der neuen Spaltennamen
print(colnames(dengue2020_2))
# Datenrahmen für die Jahre 2006 bis 2019 kopieren und umbenennen
dengue2006 <- dengue2020_2
colnames(dengue2006)[2:14] <- c(paste(2006, "total", sep = "."), paste(2006, sprintf('%02d', 1:12), sep = "."))
dengue2007 <- dengue2020_2
colnames(dengue2007)[2:14] <- c(paste(2007, "total", sep = "."), paste(2007, sprintf('%02d', 1:12), sep = "."))
dengue2008 <- dengue2020_2
colnames(dengue2008)[2:14] <- c(paste(2008, "total", sep = "."), paste(2008, sprintf('%02d', 1:12), sep = "."))
dengue2009 <- dengue2020_2
colnames(dengue2009)[2:14] <- c(paste(2009, "total", sep = "."), paste(2009, sprintf('%02d', 1:12), sep = "."))
dengue2010 <- dengue2020_2
colnames(dengue2010)[2:14] <- c(paste(2010, "total", sep = "."), paste(2010, sprintf('%02d', 1:12), sep = "."))
dengue2011 <- dengue2020_2
colnames(dengue2011)[2:14] <- c(paste(2011, "total", sep = "."), paste(2011, sprintf('%02d', 1:12), sep = "."))
dengue2012 <- dengue2020_2
colnames(dengue2012)[2:14] <- c(paste(2012, "total", sep = "."), paste(2012, sprintf('%02d', 1:12), sep = "."))
dengue2013 <- dengue2020_2
colnames(dengue2013)[2:14] <- c(paste(2013, "total", sep = "."), paste(2013, sprintf('%02d', 1:12), sep = "."))
dengue2014 <- dengue2020_2
colnames(dengue2014)[2:14] <- c(paste(2014, "total", sep = "."), paste(2014, sprintf('%02d', 1:12), sep = "."))
dengue2015 <- dengue2020_2
colnames(dengue2015)[2:14] <- c(paste(2015, "total", sep = "."), paste(2015, sprintf('%02d', 1:12), sep = "."))
dengue2016 <- dengue2020_2
colnames(dengue2016)[2:14] <- c(paste(2016, "total", sep = "."), paste(2016, sprintf('%02d', 1:12), sep = "."))
dengue2017 <- dengue2020_2
colnames(dengue2017)[2:14] <- c(paste(2017, "total", sep = "."), paste(2017, sprintf('%02d', 1:12), sep = "."))
dengue2018 <- dengue2020_2
colnames(dengue2018)[2:14] <- c(paste(2018, "total", sep = "."), paste(2018, sprintf('%02d', 1:12), sep = "."))
dengue2019 <- dengue2020_2
colnames(dengue2019)[2:14] <- c(paste(2019, "total", sep = "."), paste(2019, sprintf('%02d', 1:12), sep = "."))
dengue2020 = dengue2020_2
library(dplyr)
dengue2020 <- dengue2020 %>%
mutate(row_number = row_number())
#lets set the row index to the row_numbers
rownames(dengue2020) = dengue2020$row_number
# Überprüfe den DataFrame mit der hinzugefügten Nummerierung
print(dengue2020)
# Erzeuge eine Liste der Jahre von 2006 bis 2020
jahre <- 2006:2019
# Iteriere über die Jahre und erstelle die Dataframes
for (jahr in jahre) {
# Erstelle den Namen des Dataframes basierend auf dem Jahr
df_name <- paste0("dengue", jahr)
# Führe die Operationen auf dem entsprechenden Dataframe aus
assign(df_name, get(df_name) %>% mutate(row_number = row_number()))
assign(paste0("rownames(", df_name, ")"), get(df_name)$row_number)
# Überprüfe den DataFrame mit der hinzugefügten Nummerierung
print(get(df_name))
}
library(dplyr)
merged_df <- left_join(x = dengue2006, y = dengue2007, by = c("Reporting areas"))
merged_df
# Benötigte Bibliothek laden
library(readxl)
# Relativer Pfad zur Excel-Datei
path2006 <- "2006_dengue_extracted.xlsx"
path2007 <- "2007_dengue_extracted.xlsx"
path2008 <- "2008_dengue_extracted.xlsx"
path2009 <- "2009_dengue_extracted.xlsx"
path2010 <- "2010_dengue_extracted.xlsx"
path2011 <- "2011_dengue_extracted.xlsx"
path2012 <- "2012_dengue_extracted.xlsx"
path2013 <- "2013_dengue_extracted.xlsx"
path2014 <- "2014_dengue_extracted.xlsx"
path2015 <- "2015_dengue_extracted.xlsx"
path2016 <- "2016_dengue_extracted.xlsx"
path2017 <- "2017_dengue_extracted.xlsx"
path2018 <- "2018_dengue_extracted.xlsx"
path2019 <- "2019_dengue_extracted.xlsx"
path2020 <- "2010_dengue_extracted.xlsx"
# Pfad zum Arbeitsverzeichnis setzen (wo die Excel-Datei liegt)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Excel-Datei einlesen und als Dataframe speichern
dengue2006 <- read_excel(path2006)
dengue2007 <- read_excel(path2007)
dengue2008 <- read_excel(path2008)
dengue2009 <- read_excel(path2009)
dengue2010 <- read_excel(path2010)
dengue2011 <- read_excel(path2011)
dengue2012 <- read_excel(path2012)
dengue2013 <- read_excel(path2013)
dengue2014 <- read_excel(path2014)
dengue2015 <- read_excel(path2015)
dengue2016 <- read_excel(path2016)
dengue2017 <- read_excel(path2017)
dengue2018 <- read_excel(path2018)
dengue2019 <- read_excel(path2019)
dengue2020 <- read_excel(path2020)
# Den eingelesenen Dataframe anzeigen
print(dengue2006)
print(dengue2007)
#eine zeile fehlt bei 2020: lasst uns sie hinzufügen
Bungkan = c("Bungkan",873, 17, 31, 48, 21, 154, 453, 122, 21, 5, 1, 0, 0)
dengue2020 = rbind(dengue2020,Bungkan)
# Benötigte Bibliothek laden
#library(readxl)
# Liste der Dateinamen
#file_names <- c("2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020")
# Pfad zum Arbeitsverzeichnis setzen (wo die Excel-Dateien liegen)
#setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Excel-Dateien einlesen und als Liste von Dataframes speichern
#dengue_data <- lapply(file_names, function(file_name) {
#file_path <- paste0("./dengue_data/", file_name, "_dengue_extracted.xlsx")
#read_excel(file_path)
#})
# Die einzelnen Dataframes den entsprechenden Variablennamen zuweisen
#list2env(setNames(dengue_data, paste0("dengue", file_names)), envir = .GlobalEnv)
# Liste der Jahre
years <- c(2012:2016)
for (year in years) {
# Name des Dataframes
df_name <- paste0("dengue", year)
# Dataframe abrufen
df <- get(df_name)
total_col_name <- paste0("Total", year)  # Name der "Total"-Spalte
df[, total_col_name] <- rowSums(df[, 2:13])  # "Total"-Spalte hinzufügen
assign(df_name, df)  # Aktualisierten Dataframe speichern
}
rownames(dengue2006) = dengue2006$`Reporting areas`
#let`s remove the total Zone numbers and Regions
i.remove = which(rownames(dengue2006) %in% c("Zone:1","Zone:4","Zone:2","Zone:5","Zone:6", "Zone:3","Zone:7", "Zone:8", "Zone:9", "Zone:10", "Zone:11", "Zone:12", "Zone:13", "Zone:14", "Zone:15", "Zone:16", "Zone:17", "Zone:18", "Zone:20", "Northern Region", "Central Region", "Southern Region", "North-Eastern Region","Total"))
#let´s remove the lines
dengue2006 = dengue2006[- i.remove,]
print(dengue2006)
#alle spalten namen angleichen
colnames(dengue2008) = dengue2009[1,]
colnames(dengue2009) = dengue2009[1,]
colnames(dengue2010) = dengue2009[1,]
colnames(dengue2011) = dengue2009[1,]
colnames(dengue2012) = dengue2009[1,]
colnames(dengue2013) = dengue2009[1,]
colnames(dengue2014) = dengue2009[1,]
colnames(dengue2015) = dengue2009[1,]
colnames(dengue2016) = dengue2009[1,]
colnames(dengue2017) = dengue2009[1,]
colnames(dengue2018) = dengue2009[1,]
colnames(dengue2019) = dengue2009[1,]
colnames(dengue2020) = dengue2009[1,]
#vergleich = which(dengue2019$`Reporting areas` %in% dengue2020$`Reporting areas`)
#dengue_zeilezuviel= dengue2019[-vergleich,]
#print (dengue_zeilezuviel)
# Liste der Jahre
years <- c(2006:2020)
#Nummern von 1-19
years0 = paste0("0", 1:9)
years1 = c(10:19)
#liste der Zonen mit format: ZONE:01 - 19
ZONE0 = c(paste0("ZONE",":", years0), paste0("ZONE",":", years1))
#Liste der Zonen mit format Zone:1 - 19
Zone1 = c(paste0("Zone",":", 1:19))
# Schleife über die Jahre
for (year in years) {
# DataFrame-Namen generieren
df_name <- paste0("dengue", year)
# DataFrame laden
df <- get(df_name)
# Setze die Zeilennamen auf die Werte der Spalte "Reporting areas"
rownames(df) <- df$`Reporting areas`
# Zeilen entfernen
remove_rows <- c(ZONE0, Zone1, "Northern Region", "Central Region", "Southern Region", "North-Eastern Region","Total","Reportingareas", "Reporting areas", "North Region", "South Region", "Northeast Region")
df <- df[!rownames(df) %in% remove_rows, ]
# Speichere das modifizierte DataFrame unter dem gleichen Namen
assign(df_name, df)
# Gib das modifizierte DataFrame aus
print(df)
}
#ausgangsdataframe sind die einzelmnen von 2006 - 2020
#zuerst müssen wir alle Spalten umbennen
#neue dataframecopy
dengue2020_2 = dengue2020
# Jahr für die Umbenennung festlegen
jahr <- 2020
# Spaltennamen umformatieren
colnames(dengue2020_2)[2:14] <- c(paste(jahr, "total", sep = "."), paste(jahr, sprintf('%02d', 1:12), sep = "."))
# Überprüfung der neuen Spaltennamen
print(colnames(dengue2020_2))
# Datenrahmen für die Jahre 2006 bis 2019 kopieren und umbenennen
dengue2006 <- dengue2020_2
colnames(dengue2006)[2:14] <- c(paste(2006, "total", sep = "."), paste(2006, sprintf('%02d', 1:12), sep = "."))
dengue2007 <- dengue2020_2
colnames(dengue2007)[2:14] <- c(paste(2007, "total", sep = "."), paste(2007, sprintf('%02d', 1:12), sep = "."))
dengue2008 <- dengue2020_2
colnames(dengue2008)[2:14] <- c(paste(2008, "total", sep = "."), paste(2008, sprintf('%02d', 1:12), sep = "."))
dengue2009 <- dengue2020_2
colnames(dengue2009)[2:14] <- c(paste(2009, "total", sep = "."), paste(2009, sprintf('%02d', 1:12), sep = "."))
dengue2010 <- dengue2020_2
colnames(dengue2010)[2:14] <- c(paste(2010, "total", sep = "."), paste(2010, sprintf('%02d', 1:12), sep = "."))
dengue2011 <- dengue2020_2
colnames(dengue2011)[2:14] <- c(paste(2011, "total", sep = "."), paste(2011, sprintf('%02d', 1:12), sep = "."))
dengue2012 <- dengue2020_2
colnames(dengue2012)[2:14] <- c(paste(2012, "total", sep = "."), paste(2012, sprintf('%02d', 1:12), sep = "."))
dengue2013 <- dengue2020_2
colnames(dengue2013)[2:14] <- c(paste(2013, "total", sep = "."), paste(2013, sprintf('%02d', 1:12), sep = "."))
dengue2014 <- dengue2020_2
colnames(dengue2014)[2:14] <- c(paste(2014, "total", sep = "."), paste(2014, sprintf('%02d', 1:12), sep = "."))
dengue2015 <- dengue2020_2
colnames(dengue2015)[2:14] <- c(paste(2015, "total", sep = "."), paste(2015, sprintf('%02d', 1:12), sep = "."))
dengue2016 <- dengue2020_2
colnames(dengue2016)[2:14] <- c(paste(2016, "total", sep = "."), paste(2016, sprintf('%02d', 1:12), sep = "."))
dengue2017 <- dengue2020_2
colnames(dengue2017)[2:14] <- c(paste(2017, "total", sep = "."), paste(2017, sprintf('%02d', 1:12), sep = "."))
dengue2018 <- dengue2020_2
colnames(dengue2018)[2:14] <- c(paste(2018, "total", sep = "."), paste(2018, sprintf('%02d', 1:12), sep = "."))
dengue2019 <- dengue2020_2
colnames(dengue2019)[2:14] <- c(paste(2019, "total", sep = "."), paste(2019, sprintf('%02d', 1:12), sep = "."))
dengue2020 = dengue2020_2
library(dplyr)
merged_df <- left_join(x = dengue2006, y = dengue2007, by = c("Reporting areas"))
merged_df
library(dplyr)
merged_df <- left_join(x = dengue2006, y = dengue2007, by = c("Reporting areas"))
merged_df
merged_df <- left_join(x = merged_df, y = dengue2008, by = c("Reporting areas"))
merged_df
merged_df <- left_join(x = merged_df, y = dengue2008, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2008, by = c("Reporting areas"))
library(dplyr)
merged_df <- left_join(x = dengue2006, y = dengue2007, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2008, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2009, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2010, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2011, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2012, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2013, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2014, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2015, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2016, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2017, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2018, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2019, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2010, by = c("Reporting areas"))
print(merged_df)
library(dplyr)
merged_df <- left_join(x = dengue2006, y = dengue2007, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2008, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2009, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2010, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2011, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2012, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2013, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2014, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2015, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2016, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2017, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2018, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2019, by = c("Reporting areas"))
merged_df <- left_join(x = merged_df, y = dengue2020, by = c("Reporting areas"))
print(merged_df)
#locales Speichern der dengue_hum
filePath = paste(getwd(), "dengue_data_com2.csv",sep = "/")
write.csv(dengue_data_com2, filePath)
dengue_data_com2 = merged_df
#locales Speichern der dengue_hum
filePath = paste(getwd(), "dengue_data_com2.csv",sep = "/")
write.csv(dengue_data_com2, filePath)
View(dengue_data_com2)
